import json
import urllib2

import ggeocoder
from zope.component import getUtility

from mr.cabot.interfaces import IUserDatabase
from mr.cabot.git import GitRepo
from mr.cabot.users import User

REPOS = {'Plone':"git://github.com/plone/Plone",
'archetypes_kss':"git://github.com/plone/archetypes.kss",
'archetypes_querywidget':"git://github.com/plone/archetypes.querywidget",
'archetypes_referencebrowserwidget':"git://github.com/plone/archetypes.referencebrowserwidget",
'archetypes_schemaextender':"git://github.com/plone/archetypes.schemaextender",
'borg_localrole':"git://github.com/plone/borg.localrole",
'collective_monkeypatcher':"git://github.com/plone/collective.monkeypatcher",
'collective_testcaselayer':"git://github.com/collective/collective.testcaselayer",
'collective_z3cform_datetimewidget':"git://github.com/collective/collective.z3cform.datetimewidget",
'diazo':"git://github.com/plone/diazo",
'plone_autoform':"git://github.com/plone/plone.autoform",
'plone_browserlayer':"git://github.com/plone/plone.browserlayer",
'plone_caching':"git://github.com/plone/plone.caching",
'plone_cachepurging':"git://github.com/plone/plone.cachepurging",
'plone_contentrules':"git://github.com/plone/plone.contentrules",
'plone_fieldsets':"git://github.com/plone/plone.fieldsets",
'plone_folder':"git://github.com/plone/plone.folder",
'plone_i18n':"git://github.com/plone/plone.i18n",
'plone_indexer':"git://github.com/plone/plone.indexer",
'plone_intelligenttext':"git://github.com/plone/plone.intelligenttext",
'plone_keyring':"git://github.com/plone/plone.keyring",
'plone_locking':"git://github.com/plone/plone.locking",
'plone_memoize':"git://github.com/plone/plone.memoize",
'plone_openid':"git://github.com/plone/plone.openid",
'plone_outputfilters':"git://github.com/plone/plone.outputfilters",
'plone_portlets':"git://github.com/plone/plone.portlets",
'plone_protect':"git://github.com/plone/plone.protect",
'plone_registry':"git://github.com/plone/plone.registry",
'plone_reload':"https://github.com/hannosch/plone.reload",
'plone_resource':"git://github.com/plone/plone.resource",
'plone_scale':"git://github.com/plone/plone.scale",
'plone_session':"git://github.com/plone/plone.session",
'plone_stringinterp':"git://github.com/plone/plone.stringinterp",
'plone_subrequest':"git://github.com/plone/plone.subrequest",
'plone_supermodel':"git://github.com/plone/plone.supermodel",
'plone_testing':"git://github.com/plone/plone.testing",
'plone_theme':"git://github.com/plone/plone.theme",
'plone_transformchain':"git://github.com/plone/plone.transformchain",
'plone_uuid':"git://github.com/plone/plone.uuid",
'plone_app_blob':"git://github.com/plone/plone.app.blob",
'plone_app_caching':"git://github.com/plone/plone.app.caching",
'plone_app_collection':"git://github.com/plone/plone.app.collection",
'plone_app_content':"git://github.com/plone/plone.app.content",
'plone_app_contentlisting':"git://github.com/plone/plone.app.contentlisting",
'plone_app_contentmenu':"git://github.com/plone/plone.app.contentmenu",
'plone_app_contentrules':"git://github.com/plone/plone.app.contentrules",
'plone_app_controlpanel':"git://github.com/plone/plone.app.controlpanel",
'plone_app_customerize':"git://github.com/plone/plone.app.customerize",
'plone_app_discussion':"git://github.com/plone/plone.app.discussion",
'plone_app_folder':"git://github.com/plone/plone.app.folder",
'plone_app_form':"git://github.com/plone/plone.app.form",
'plone_app_i18n':"git://github.com/plone/plone.app.i18n",
'plone_app_imaging':"git://github.com/plone/plone.app.imaging",
'plone_app_iterate':"git://github.com/plone/plone.app.iterate",
'plone_app_jquery':"git://github.com/plone/plone.app.jquery",
'plone_app_jquerytools':"git://github.com/plone/plone.app.jquerytools",
'plone_app_kss':"git://github.com/plone/plone.app.kss",
'plone_app_layout':"git://github.com/plone/plone.app.layout",
'plone_app_linkintegrity':"git://github.com/plone/plone.app.linkintegrity",
'plone_app_locales':"git://github.com/collective/plone.app.locales",
'plone_app_openid':"git://github.com/plone/plone.app.openid",
'plone_app_portlets':"git://github.com/plone/plone.app.portlets",
'plone_app_querystring':"git://github.com/plone/plone.app.querystring",
'plone_app_redirector':"git://github.com/plone/plone.app.redirector",
'plone_app_registry':"git://github.com/plone/plone.app.registry",
'plone_app_search':"git://github.com/plone/plone.app.search",
'plone_app_testing':"git://github.com/plone/plone.app.testing",
'plone_app_theming':"git://github.com/plone/plone.app.theming",
'plone_app_upgrade':"git://github.com/plone/plone.app.upgrade",
'plone_app_users':"git://github.com/plone/plone.app.users",
'plone_app_uuid':"git://github.com/plone/plone.app.uuid",
'plone_app_viewletmanager':"git://github.com/plone/plone.app.viewletmanager",
'plone_app_vocabularies':"git://github.com/plone/plone.app.vocabularies",
'plone_app_workflow':"git://github.com/plone/plone.app.workflow",
'plone_app_z3cform':"git://github.com/plone/plone.app.z3cform",
'plone_portlet_collection':"git://github.com/plone/plone.portlet.collection",
'plone_portlet_static':"git://github.com/plone/plone.portlet.static",
'plone_recipe_alltests':"git://github.com/plone/plone.recipe.alltests",
'plone_recipe_zope2instance':"git://github.com/plone/plone.recipe.zope2instance",
'plone_recipe_zeoserver':"git://github.com/plone/plone.recipe.zeoserver",
'plonetheme_sunburst':"git://github.com/plone/plonetheme.sunburst",
'plonetheme_classic':"git://github.com/plone/plonetheme.classic",
'repoze_xmliter':"https://github.com/repoze/repoze.xmliter",
'txtfilter':"git://github.com/plone/txtfilter",
'wicked':"git://github.com/plone/wicked",
'Products_Archetypes':"git://github.com/plone/Products.Archetypes",
'Products_ATContentTypes':"git://github.com/plone/Products.ATContentTypes",
'Products_ATReferenceBrowserWidget':"git://github.com/plone/Products.ATReferenceBrowserWidget",
'Products_CMFDiffTool':"git://github.com/plone/Products.CMFDiffTool",
'Products_CMFDynamicViewFTI':"git://github.com/plone/Products.CMFDynamicViewFTI",
'Products_CMFEditions':"git://github.com/plone/Products.CMFEditions",
'Products_CMFFormController':"git://github.com/plone/Products.CMFFormController",
'Products_CMFPlacefulWorkflow':"git://github.com/plone/Products.CMFPlacefulWorkflow",
'Products_CMFPlone':"git://github.com/plone/Products.CMFPlone",
'Products_CMFQuickInstallerTool':"git://github.com/plone/Products.CMFQuickInstallerTool",
'Products_CMFTestCase':"git://github.com/plone/Products.CMFTestCase",
'Products_contentmigration':"git://github.com/plone/Products.contentmigration",
'Products_ExtendedPathIndex':"git://github.com/plone/Products.ExtendedPathIndex",
'Products_i18ntestcase':"git://github.com/plone/Products.i18ntestcase",
'Products_LinguaPlone':"git://github.com/plone/Products.LinguaPlone",
'Products_Marshall':"git://github.com/plone/Products.Marshall",
'Products_MimetypesRegistry':"git://github.com/plone/Products.MimetypesRegistry",
'Products_PasswordResetTool':"git://github.com/plone/Products.PasswordResetTool",
'Products_PlacelessTranslationService':"t://github.com/plone/Products.PlacelessTranslationService",
'Products_PloneLanguageTool':"git://github.com/plone/Products.PloneLanguageTool",
'Products_PlonePAS':"git://github.com/plone/Products.PlonePAS",
'Products_PloneTestCase':"git://github.com/plone/Products.PloneTestCase",
'Products_PortalTransforms':"git://github.com/plone/Products.PortalTransforms",
'Products_ResourceRegistries':"git://github.com/plone/Products.ResourceRegistries",
'Products_statusmessages':"git://github.com/plone/Products.statusmessages",
'Products_TinyMCE':"git://github.com/plone/Products.TinyMCE",
'Products_validation':"git://github.com/plone/Products.validation"}

GITHUB_ACCOUNTS = {
    'ableeb',
    'ablumer',
    'aclark4life',
    'acsr',
    'adam139',
    'afrepues',
    'agitator',
    'agnogueira',
    'albertoserrano',
    'ale-rt',
    'alecghica',
    'alecpm',
    'aleGpereira',
    'amleczko',
    'andreasma',
    'anthonygerrard',
    'anuyens',
    'arterrey',
    'auspex',
    'avoinea',
    'avelino',
    'bakednotfried',
    'bdbaddog',
    'benniboy',
    'blambert555',
    'bloodbare',
    'bosim',
    'bsuttor',
    'bubenkoff',
    'buchi',
    'cah190',
    'calvinhp',
    'cbcunc',
    'ccrownhart',
    'cdw9',
    'cedricmessiant',
    'cekk',
    'cewing',
    'chaoflow',
    'chervol',
    'cillianderoiste',
    'claytonc',
    'claytron',
    'cleberjsantos',
    'cleder',
    'Clopy',
    'cpsaltis',
    'craspeh',
    'csenger',
    'cstengel',
    'Cuidightheach',
    'd-mo',
    'danilofreitas',
    'danjacka',
    'datakurre',
    'davidblewett',
    'davidemoro',
    'davidjb',
    'davilima6',
    'davisagli',
    'ddbeck',
    'ddellaquila',
    'DebVortex',
    'demarant',
    'djay',
    'djowett',
    'do3cc',
    'dokai',
    'dTordable',
    'duffyd',
    'dukebody',
    'ebrehault',
    'eleddy',
    'elioschmutz',
    'encolpe',
    'emanlove',
    'enfold-josh',
    'enzus',
    'epeli',
    'ericof',
    'erral',
    'esartor',
    'espenmn',
    'esteele',
    'fabiosurrage',
    'faro76',
    'flecox',
    'frapell',
    'fredvd',
    'frisi',
    'fschulze',
    'fsprenger',
    'fulv',
    'garbas',
    'gaudenz',
    'gbastien',
    'gborelli',
    'giacomos',
    'gil-cano',
    'glenfant',
    'gogobd',
    'gotcha',
    'gvizdyk',
    'gweis',
    'gyst',
    'hammertoe',
    'hannosch',
    'hannoschulz',
    'helmantel',
    'hietpasd',
    'hoka',
    'href',
    'HRodriguez',
    'huubbouma',
    'hvelarde',
    'ianderso',
    'ianderso',
    'ichim-david',
    'iElectric',
    'itd',
    'ivanteoh',
    'izak',
    'j23d',
    'jaroel',
    'jcbrand',
    'jcerjak',
    'jdinuncio',
    'jean',
    'jensens',
    'jessesnyder',
    'jfroche',
    'jhb',
    'jianaijun',
    'joka',
    'jonascho',
    'jone',
    'jonstahl',
    'jpgimenez',
    'jriboux',
    'jstegle',
    'j-craig',
    'k-j-kleist',
    'kaerumy',
    'kagesenshi',
    'kcleong',
    'kenmanheimer',
    'keul',
    'khink',
    'kingel',
    'kiorky',
    'kroman0',
    'kuetrzi',
    'l34marr',
    'lentinj',
    'lepri',
    'limi',
    'loechel',
    'lrowe',
    'luca-bellenghi',
    'lukasgraf',
    'lukebrannon',
    'lzdych',
    'maartenkling',
    'macagua',
    'maethu',
    'maikroeder',
    'malthe',
    'mamico',
    'marciomazza',
    'markvl',
    'martior',
    'MatthewWilkes',
    'mattss',
    'mauritsvanrees',
    'metatoaster',
    'mgogoulos',
    'mgogoulos',
    'mhora',
    'mikerhodes',
    'miohtama',
    'mishunov',
    'mitchellrj',
    'mjpieters',
    'morphex',
    'mrsavage',
    'MrTango',
    'muellert',
    'mylemix',
    'naro',
    'natea',
    'newbery',
    'ngeissel',
    'ninfaj',
    'npropadovic',
    'nrb',
    'nrgaway',
    'nruiz',
    'nueces',
    'nutjob4life',
    'oggers',
    'optilude',
    'parruc',
    'patrickwestphal',
    'pbauer',
    'pellekrogholt',
    'petschki',
    'phabegger',
    'phgross',
    'phlax',
    'pigeonflight',
    'pilz',
    'pingviini',
    'pjstevns',
    'plamut',
    'polyester',
    'prmtl',
    'prospchr',
    'pumazi',
    'pysailor',
    'Quimera',
    'radekj',
    'rafaelbco',
    'rafahela',
    'ralphjacobs',
    'ramonski',
    'rbanffy',
    'rbeylerian',
    'reebalazs',
    'reedobrien',
    'regebro',
    'reinhardt',
    'rnd0101',
    'rnixx',
    'rochecompaan',
    'ronniestevens',
    'rpatterson',
    'rudaporto',
    'runyaga',
    'rvanlaar',
    'SafPlusPlus',
    'saibatizoku',
    'saily',
    'scw',
    'seanupton',
    'senner',
    'sgraber',
    'shagi',
    'shentonfreude',
    'sidnei',
    'siebo',
    'silviot',
    'simahawk',
    'simonedeponti',
    'sithmel',
    'sjoerdve',
    'smcmahon',
    'sneridagh',
    'Solgema',
    'spanktar',
    'spereverde',
    'squibobblepants',
    'staeff',
    'StevenLooman',
    'stonor',
    'sunew',
    'svx',
    'sylvainb',
    'taito',
    'Tamosauskas',
    'tbenita',
    'tcurvelo',
    'tdesvenain',
    'TH-code',
    'themask96',
    'thepjot',
    'thet',
    'tiazma',
    'tiberiuichim',
    'till44',
    'tisto',
    'tkimnguyen',
    'tmassman',
    'tmog',
    'tomgross',
    'tomster',
    'toutpt',
    'travacic',
    'Tschanzt',
    'tzicatl',
    'uncleerniebs',
    'unclelarry',
    'valentinaB',
    'vangheem',
    'vincent-psarga',
    'vincentfretin',
    'vincic',
    'vipod',
    'vsomogyi',
    'wichert',
    'witekdev',
    'witsch',
    'wosc',
    'WouterVH',
    'xiru',
    'yboussard',
    'ymazzer',
    'yurj',
    'zedr',
    'zombified',
    'zopyx',
    'zotya',
    'zupo',
    'zworkb',
}


def restore_plone_users():
    import pickle
    PLONE_USERS = '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\n'
    PLONE_USERS = pickle.loads(PLONE_USERS.decode("base64").decode("zip"))
    users = getUtility(IUserDatabase)
    users.users = PLONE_USERS.users

def restore_plone_repos():
    import pickle
    repos = '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\n'
    repos = pickle.loads(repos.decode("base64").decode("zip"))
    return repos
    

def repo_objects(repos):
    return {i[0]:GitRepo(i[1]) for i in repos.items()}

def get_github_accounts(accounts, token):
    geocoder = ggeocoder.Geocoder()
    users = getUtility(IUserDatabase)
    i = 0.0
    for account in accounts:
        i+=1
        print "%2d%% complete" % ((i/len(accounts))*100.0)
        gh_api = urllib2.urlopen("https://api.github.com/users/%s?access_token=%s" % (account,token))
        user = json.loads(gh_api.read())
        try:
            location = geocoder.geocode(user['location'])[0].coordinates
        except:
            location = None
        users.add_user(User(user.get('name', user['login']), user.get('email', None), location))

def get_recent_mailinglist_posts():
    from mr.cabot.gmane import MailingList
    lists = MailingList("gmane.comp.web.zope.plone.user"), MailingList("gmane.comp.web.zope.plone.devel")
    messages = []
    for mlist in lists:
        to_id = mlist.latest
        from_id = to_id - 10
        messages += [mlist[post_id] for post_id in range(from_id, to_id)]
    return messages